# Alembic Migration for SQLite

This guide explains how to use Alembic to alter tables in SQLite, as SQLite doesn't support some direct table modifications like other SQL databases.

## Table of Contents
- [Prerequisites](#prerequisites)
- [Installation](#installation)
- [Usage](#usage)
- [Contributing](#contributing)
- [License](#license)

## Prerequisites
- Python 3.7 or later
- Alembic installed via pip
- SQLite database

## Installation
1. Install Alembic:
    ```bash
    pip install alembic
    ```

2. Initialize Alembic in your project directory:
    ```bash
    alembic init alembic
    ```

3. Modify the `alembic.ini` file to point to your SQLite database:
    ```ini
    sqlalchemy.url = sqlite:///yourdatabase.db
    ```

4. In the `alembic` folder, modify `script.py.mako`:
    - Set `revision` and `down_revision`:
        ```python
        revision = 'head'
        down_revision = None
        ```

    - Add new columns in the `upgrade()` function:
        ```python
        op.add_column('product', sa.Column('image_filename', sa.String(length=255), nullable=True))
        op.add_column('product', sa.Column('description', sa.String(length=255), nullable=True))
        ```

    - Define the corresponding actions in the `downgrade()` function:
        ```python
        op.drop_column('product', 'image_filename')
        op.drop_column('product', 'description')
        ```

## Usage
To apply the migration and update your SQLite database, run:
```bash
alembic upgrade head
